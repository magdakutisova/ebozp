<script type="text/javascript">
var CLIENT_ID = <?php echo $this->client->id_client; ?>;
</script>
<?php
echo $this->docType();

// vyhodnoceni typu a nastaveni promennych s popisky
switch ($this->REQ_TYPE) {
    case Document_DocumentationController::REQ_DOC:
        $mainHeader = "Dokumentace";
        $addHeader = "Přidat novou dokumentaci";
        $defaultHeader = "Nastavit výchozí dokumentaci";
        $importHeader = "Import dokumentace ze souboru";
        $presetLabel = "Přednastavená dokumentace";
        $nameLabel = "Přednastavená jména dokumentace";
        break;
    
    case Document_DocumentationController::REQ_REC:
        $mainHeader = "Záznamy";
        $addHeader = "Přidat nový záznam";
        $defaultHeader = "Nastavit výchozí záznamy";
        $importHeader = "Import záznamů ze souboru";
        $presetLabel = "Přednastavené záznamy";
        $nameLabel = "Přednastavená jména záznamů";
        break;
}

$acl = new My_Controller_Helper_Acl();
$user = Zend_Auth::getInstance()->getIdentity();

$subsidiaryId = Zend_Controller_Front::getInstance()->getRequest()->getParam("subsidiaryId");

// vyhodnoceni, jestli uzivatel muze dokumentaci upravovat
$editable = $acl->isAllowed($user->role, "document:documentation", "put");
?>
<h2><?php echo $mainHeader; ?></h2>
<?php 
if ($editable) {
?>
<div class="box">
	<form action="<?php echo $this->url(array("clientId" => $this->client->id_client, "TYPE" => $this->REQ_TYPE), "document-documentation-index"); ?>" method="get">
		<?php 
		$mo = $this->addForm->getElement("subsidiary_id")->getMultiOptions();
		$subList = array("-1" => "-- VŠECHNA DOKUMENTACE --");
		
		foreach ($mo as $k => $v) $subList[$k] = $v;
		
		echo $this->formSelect("subId", $this->subsidiaryId, array(), $subList);
		echo $this->formSubmit("filter-submit", "Filtrovat");
		?>
	</form>
	
<?php 
$links = array();

if ($acl->isAllowed($user->role, "document:preset")) {
	$links[] = sprintf("<a href='/document/preset/index?TYPE=%s'>%s</a>", $this->REQ_TYPE, $presetLabel);
}

if ($acl->isAllowed($user->role, "document:name")) {
	$links[] =  sprintf("<a href='/document/name/index?TYPE=%s'>%s</a>", $this->REQ_TYPE, $nameLabel);
}

echo  implode(" | ", $links);
?>
</div>
<?php 
}
?>
<table id="docs-table" class="multirow-table">
	<thead>
		<tr>
			<th>
			Název
			</th>
			<th>
			Pobočka
			</th>
			<th>
			Soubor
			</th>
			<?php 
			if ($editable) {
				echo "<th>Interní</th>";
				echo "<th rowspan='2'>Akce</th>";
			}
			?>
		</tr>
        <?php
        if ($editable) {
        ?>
        <tr>
            <th colspan="2">
                Komentář
            </th>
            <th colspan="2">
                Interní komentář
            </th>
        </tr>
        <?php
        } else {
            ?>
        <tr>
            <th colspan="3">
                Komentář
            </th>
        </tr>
        <?php
        }
        ?>
	</thead>
	<tbody>
	<?php 

foreach ($this->documentations as $doc) {
	// vyhodnoceni, zda se jedna o prazdny
	$class = "";
    
    if (!$doc->file_id && !$doc->internal_file_id && empty($doc->comment)) {
        $class = "error";
    } elseif ($doc->is_marked) {
        $class = "deadline-yellow";
    }
	
    echo "<tbody class='$class'>";
	echo "<tr>";
	
	echo "<td>$doc->name</td>";
	echo "<td>" . ($doc->subsidiary_name ? $doc->subsidiary_name : "CENTRÁLNÍ DOKUMENTACE") . "</td>";
	
	if ($editable) {
		echo "<td>" . ($doc->fileid ? $this->file((object) array("name" => $doc->filename, "id" => $doc->fileid), "download", $subsidiaryId) : "-") . "</td>";
		echo "<td>" . ($doc->i_fileid ? $this->file((object) array("name" => $doc->i_filename, "id" => $doc->i_fileid), "download", $subsidiaryId) : "-") . "</td>";
		echo "<td rowspan='2'>" . ($editable ? $this->formButton("edit-" . $doc->id, "Upravit") : "&nbsp") . "</td>";
		
	} else {
		echo "<td>" . ($doc->fileid ? $this->file((object) array("name" => $doc->filename, "id" => $doc->fileid), "download") : "-") . "</td>";
	}
    
	echo "</tr>";
    
    /**
     * @todo prasecina - predelat a optimalizovat
     */
    if ($editable) {
        printf("<tr><td colspan=\"1\">%s</td><td colspan=\"3\">%s</td></tr>", nl2br($doc->comment), nl2br($doc->comment_internal));
    } else {
        printf("<tr><td colspan=\"3\">%s</td></tr>", nl2br($doc->comment));
    }
    
    echo "</tbody>";
}
	?>
	</tbody>
</table>
<?php 
// pokud je uzivatel opravnen, zobrazi se formular na pridani
if ($acl->isAllowed($user->role, "document:documentation", "post")) {
	printf("<h3>%s</h3>", $addHeader);
	echo $this->addForm; 
}

if ($acl->isAllowed($user->role, "document:documentation", "reset")) {
	?>
<h2><?php echo $defaultHeader; ?></h2>
<form action="/document/documentation/reset?clientId=<?php echo $this->client->id_client; ?>" method="post" onsubmit="return confirm('Skutečně pokračovat?')">
	<em>Pozor! Při resetu bude stávající dokumentace smazána a nahrazena prázdnými sloty!</em>
	<table>
		<tr>
			<td>
			<?php echo $this->formLabel("subId", "Pobočka k resetu"); ?>
			</td>
			<td>
			<?php echo $this->formSelect("subId", null, array(), $subList); ?>
			</td>
		</tr>
		<tr>
			<td colspan="2">
			<?php echo $this->formSubmit("reset-submit", "Zresetovat"); ?>
			</td>
		</tr>
	</table>
</form>
	<?php 
}

// vypsani importu ze souboru, pokud ma uzivatel opravneni
if ($acl->isAllowed($user->role, "document:documentation", "import")) {
	?>
<h2><?php echo $importHeader; ?></h2>
<em>Funkce pro import souborů s definicí dokumentace vytvořených pomocí programu ClientReaper</em>
	<?php 
}
?>
<script type="text/javascript" src="/js/document/document.js"></script>