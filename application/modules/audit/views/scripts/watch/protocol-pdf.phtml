<?php
// vypnuti layotu
$this->layout()->disableLayout();

// vypnuti odpisu
$this->sign = true;
$content = $this->partial("watch/_protocol.phtml", $this);

$pdf = new My_Pdf();
$pdf->AddPage();
$pdf->SetMargins(15, 20);
$pdf->SetAutoPageBreak(true, 35);
$pdf->SetFont("dejavusans", 12, "");
$pdf->SetAutoPageBreak(true, 35);
$pdf->writeHTML($content);

$limit = 220;

if ($this->discussed->count()) {
    if ($pdf->GetY() > $limit) $pdf->AddPage ();
    
    $pdf->writeHTML($this->partial("watch/_item-list.phtml", array("caption" => "Provedeno", "items" => $this->discussed, "notFound" => "Nic nebylo projednáno")));
}

if ($this->watch->changes) {
    if ($pdf->GetY() > $limit) $pdf->AddPage ();
    
    $html = "<h2>Změny v podniku</h2>\n";
    $html .= nl2br($this->watch->changes) . "<br />";
    $pdf->writeHTML($html);
}

if ($this->watch->outputs) {
    if ($pdf->GetY() > $limit) $pdf->AddPage ();
    
    $html = "<h2>Realizační výstup</h2>";
    $html .= nl2br($this->watch->outputs) . "<br />";;
    $pdf->writeHTML($html);
}

if ($this->order->content) {
    if ($pdf->GetY() > $limit) $pdf->AddPage ();
    
    $html = "<h2>Objednávky u G U A R D 7, v.o.s.</h2>";
    $html .= nl2br($this->order->content) . "<br />";;
    $pdf->writeHTML($html);
}

// pokud nebyl soubezne proveden audit, pak se vypisi neshody a lhuty
if (!$this->watch->also_audit) {
	// rozrazeni neshod na nove, odstranene a neodstranene
	$new = array();
	$removed = array();
	$marked = array();
	$watch = $this->watch;
	
	foreach ($this->mistakes as $mistake) {
		// vyhodnoceni neshody
		if ($mistake->set_removed) {
			$removed[] = $mistake;
		} elseif ($mistake->watch_id == $watch->id) {
			$new[] = $mistake;
		} else {
			$marked[] = $mistake;
		}
	}
	
	// nove neshody
    if ($new) {
        $html = "<h2>Nově nalezené neshody</h2>";
        
        if ($new) {
            $html .= $this->partial("watch/_mistakes.phtml", array("mistakes" => $new, "columns" => array("mistake" => "Neshoda", "weight" => "Závažnost", "suggestion" => "Návrh opatření", "responsibile_name" => "Odpovědná osoba", "will_be_removed_at" => "Navrhovaný termín odstranění")));
        } else {
            $html .= "<div>-</div>";
        }
        
        if ($pdf->GetY() > $limit) $pdf->AddPage ();
        $pdf->writeHTML($html);
    }
	
	// vyhodnoceni zobrazeni neodstranenych neshod
	if ($watch->display_mistakes && $marked) {
		
		$html = "<h2>Neodstraněné neshody z minulých kontrol</h2>";
		
		if ($marked) {
			$html .= $this->partial("watch/_mistakes.phtml", array("mistakes" => $marked, "columns" => array("mistake" => "Neshoda", "weight" => "Závažnost", "notified_at" => "Datum zjištění", "suggestion" => "Návrh řešení", "responsibile_name" => "Odpovědná osoba", "will_be_removed_at" => "Navrhovaný termín odstranění")));
		} else {
			$html .= "<div>-</div>";
		}
        
        if ($pdf->GetY() > $limit) $pdf->AddPage ();
        $pdf->writeHTML($html);
	}
    
    // zobrazeni neshod ktere byly odebrany
    if ($watch->display_mistakes_removed && $removed) {
        $html = "<h2>Neshody odstraněné v této dohlídce</h2>";
		
		if ($removed) {
			$html .= $this->partial("watch/_mistakes.phtml", array("mistakes" => $removed, "columns" => array("mistake" => "Neshoda", "weight" => "Závažnost", "notified_at" => "Datum zjištění", "suggestion" => "Návrh řešení", "responsibile_name" => "Odpovědná osoba", "will_be_removed_at" => "Navrhovaný termín odstranění")));
		} else {
			$html .= "<div>-</div>";
		}
        
        if ($pdf->GetY() > $limit) $pdf->AddPage ();
        $pdf->writeHTML($html);
    }
    
    // roztrideni lhut
    $invalid = array();
    $close = array();

    foreach ($this->deadlines as $deadline) {
        if ($deadline->invalid_close && $deadline->is_valid) {
            $close[] = $deadline;
        } else {
            $invalid[] = $deadline;
        }
    }
	
	// vyhodnoceni zobrazeni lhut lhuty se zobrazi pokud je zobrazeni nastaveno a pokud jsou nejake lhuty k dispozici
	if ($watch->display_deadlines && $invalid) {
	
        $html = "<h2>Propadlé lhůty</h2>
        <table border=\"1\" cellpadding=\"2\">";
		
		$config = array("noAction" => true, "headBg" => "#c6c6c6", "subsidiaryRow" => false);
		$html .= $this->deadlineTable()->header($config);
		$html .= implode("", $this->deadlineTable()->deadlines($invalid, $config));
		
        $html .= "</table>";
	
        if ($pdf->GetY() > $limit) {
            $pdf->AddPage();
        }
        $pdf->writeHTML($html);
	}
    
    if ($watch->display_deadlines_close && $close) {
	
        $html = "<h2>Lhůty před propadnutím</h2>
        <table border=\"1\" cellpadding=\"2\">";
		
		$config = array("noAction" => true, "headBg" => "#c6c6c6", "subsidiaryRow" => false);
		$html .= $this->deadlineTable()->header($config);
		$html .= implode("", $this->deadlineTable()->deadlines($close, $config));
		
        $html .= "</table>";
	
        if ($pdf->GetY() > $limit) {
            $pdf->AddPage();
        }
        $pdf->writeHTML($html);
	}
}

// doplneni podpisu
$sign = $this->partial("watch/protocol/sign.phtml", $this);

// vyhodnoceni jeho elikosti
$tmpPdf = new My_Pdf();
$tmpPdf->AddPage();
$tmpPdf->SetMargins(15, 20);

$oldY = $tmpPdf->GetY();
$tmpPdf->writeHTML($sign);
$newY = $tmpPdf->GetY();

$delta = $newY - $oldY;

$margins = $pdf->getMargins();
$signLimit = $pdf->getPageHeight() - $margins["bottom"] - $delta - 10;

// vyhodnoceni nove stranky
if ($pdf->GetY() > $signLimit) {
    $pdf->AddPage();
}

$pdf->writeHTML($sign);

$this->pdf()->footer($pdf, $this->logo, "Zpracoval:
G U A R D 7, v.o.s. se sídlem Divišova 235, 530 03 Pardubice, IČO 48173622, DIČ CZ48173622
Zapsána u Rejstříkového soudu vedeného Krajským soudem v Hradci Králové, oddíl A, vložka 3503
Telefon: 466535700, E-mail: guard7@guard7.cz, www. guard7.cz");

if (!$this->disableHeaders) {
	header("Content-Type: application/pdf");
	header("Content-Disposition: attachment");
}

echo $pdf->Output("zprava.pdf", "S");